user nobody;
worker_processes auto;

events {
    worker_connections  1024;
    multi_accept on;
    use epoll;
}

http {

    ##################################################################################
    # Basic Settings
    ##################################################################################

    sendfile off;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    default_type application/octet-stream;
    underscores_in_headers on;
    gzip on;
    gzip_disable "msie6";
    include mime.types;

    ##################################################################################
    # Additional security settings
    ##################################################################################

    server_tokens off;
    etag off;

    add_header X-Content-Type-Options "nosniff" always;
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Strict-Transport-Security "max-age=31536000; includeSubdomains" always;

    client_body_buffer_size  1K;
    client_max_body_size 1k;
    client_header_buffer_size 1k;
    large_client_header_buffers 2 1k;

    ##################################################################################
    # Logging Settings
    ##################################################################################

    log_format accessformat '$time_iso8601 ; { $http_user_agent } ; $remote_addr; $host ; $http_x_forwarded_for ; $http_referer ; $remote_user ; { $request }; $request_time ; $upstream_response_time ; $pipe ; $body_bytes_sent ; $status ' ;
    access_log /usr/local/openresty/nginx/logs/access.log accessformat buffer=10m flush=5s;
    error_log /usr/local/openresty/nginx/logs/error.log error;

    ##################################################################################
    # Recommended init of lua resty waf
    ##################################################################################
    #  lua resty waf rules exist in folder /usr/local/openresty/lua-resty-waf/rules/
    #  these are *.json files provided by library
    #  they are loaded during resty_waf.init() method call
    ##################################################################################

    init_by_lua_block {
        require "resty.core"
        local lua_resty_waf = require "resty.waf"
        lua_resty_waf.init()
    }

    server {

        listen 80;
        server_name default_server;     
        root /usr/local/openresty/nginx/html;       
        index index.html;

        location / {

            try_files $uri $uri/ =404;

            ###############################################
            # lua resty waf usage
            ###############################################

            access_by_lua_block {
                local lua_resty_waf = require "resty.waf"
                local waf = lua_resty_waf:new()
                waf:set_option("mode", "ACTIVE")
                waf:exec()
            }

            header_filter_by_lua_block {
                local lua_resty_waf = require "resty.waf"
                local waf = lua_resty_waf:new()
                waf:exec()
            }

            body_filter_by_lua_block {
                local lua_resty_waf = require "resty.waf"
                local waf = lua_resty_waf:new()
                waf:exec()
            }

            log_by_lua_block {
                local lua_resty_waf = require "resty.waf"
                local waf = lua_resty_waf:new()
                waf:exec()
                waf:write_log_events()
            }
        }
    }
}